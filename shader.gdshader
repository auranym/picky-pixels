shader_type canvas_item;
render_mode unshaded;

struct Ramp {
	int[3] arr;
};

uniform sampler2D screen_texture : hint_screen_texture, repeat_disable, filter_nearest;

const int LIGHT_LEVELS = 3;
const vec4[] COLORS = { vec4(0, 0, 0, 0), vec4(0.50980395078659, 0.32549020648003, 0.29019609093666, 1), vec4(0.67058825492859, 0.49803921580315, 0.41176471114159, 1), vec4(0.97254902124405, 1, 0.72156864404678, 1), vec4(0.27450981736183, 0.43137255311012, 0.18823529779911, 1), vec4(0.92156863212585, 0.92941176891327, 0.49019607901573, 1), vec4(0.50196081399918, 0.71372550725937, 0.28627452254295, 1), vec4(0.37647059559822, 0.57254904508591, 0.24705882370472, 1), vec4(0.78039216995239, 0.73333334922791, 0.2392156869173, 1), vec4(0.20784313976765, 0.3098039329052, 0.3137255012989, 1), vec4(0.28627452254295, 0.24313725531101, 0.2352941185236, 1), vec4(0.419607847929, 0, 0, 1), vec4(0.24313725531101, 0.46666666865349, 0.4745098054409, 1), vec4(0.85882353782654, 0.85882353782654, 0.30196079611778, 1), vec4(0.88235294818878, 0.41176471114159, 0.31764706969261, 1), vec4(0.85882353782654, 0.258823543787, 0.14117647707462, 1), vec4(0.78039216995239, 0.09019608050585, 0, 1), vec4(0.29411765933037, 0.5686274766922, 0.54509806632996, 1), vec4(0.4745098054409, 0.4745098054409, 0.32549020648003, 1), vec4(0.46666666865349, 0.8941176533699, 0.85098040103912, 1), vec4(0.2352941185236, 0.72549021244049, 0.6745098233223, 1) };
const Ramp[] RAMPS = { Ramp({ 0, 0, 0 }), Ramp({ 1, 0, 0 }), Ramp({ 2, 0, 0 }), Ramp({ 3, 0, 0 }), Ramp({ 0, 0, 4 }), Ramp({ 5, 0, 0 }), Ramp({ 0, 0, 6 }), Ramp({ 0, 7, 4 }), Ramp({ 0, 7, 0 }), Ramp({ 0, 7, 6 }), Ramp({ 8, 0, 0 }), Ramp({ 0, 6, 4 }), Ramp({ 0, 6, 6 }), Ramp({ 9, 0, 6 }), Ramp({ 9, 0, 4 }), Ramp({ 9, 0, 0 }), Ramp({ 0, 0, 10 }), Ramp({ 1, 11, 10 }), Ramp({ 3, 11, 10 }), Ramp({ 3, 11, 0 }), Ramp({ 5, 11, 0 }), Ramp({ 8, 11, 0 }), Ramp({ 0, 6, 7 }), Ramp({ 0, 0, 7 }), Ramp({ 12, 0, 6 }), Ramp({ 12, 0, 13 }), Ramp({ 12, 0, 4 }), Ramp({ 9, 0, 10 }), Ramp({ 0, 11, 2 }), Ramp({ 0, 11, 14 }), Ramp({ 1, 11, 14 }), Ramp({ 3, 8, 1 }), Ramp({ 5, 8, 10 }), Ramp({ 3, 15, 10 }), Ramp({ 3, 16, 10 }), Ramp({ 1, 11, 0 }), Ramp({ 9, 0, 7 }), Ramp({ 17, 0, 6 }), Ramp({ 17, 0, 13 }), Ramp({ 12, 0, 5 }), Ramp({ 9, 11, 18 }), Ramp({ 0, 13, 2 }), Ramp({ 1, 13, 14 }), Ramp({ 3, 8, 18 }), Ramp({ 5, 8, 2 }), Ramp({ 13, 8, 14 }), Ramp({ 13, 15, 1 }), Ramp({ 13, 15, 10 }), Ramp({ 8, 16, 10 }), Ramp({ 9, 6, 4 }), Ramp({ 9, 6, 6 }), Ramp({ 19, 0, 7 }), Ramp({ 17, 0, 7 }), Ramp({ 12, 0, 7 }), Ramp({ 12, 11, 5 }), Ramp({ 9, 11, 5 }), Ramp({ 0, 8, 18 }), Ramp({ 0, 8, 2 }), Ramp({ 2, 13, 18 }), Ramp({ 13, 13, 18 }), Ramp({ 1, 8, 2 }), Ramp({ 1, 8, 14 }), Ramp({ 1, 15, 14 }), Ramp({ 1, 15, 10 }), Ramp({ 2, 11, 0 }), Ramp({ 12, 6, 6 }), Ramp({ 19, 0, 6 }), Ramp({ 9, 8, 5 }), Ramp({ 0, 13, 14 }), Ramp({ 1, 13, 18 }), Ramp({ 1, 13, 2 }), Ramp({ 1, 15, 18 }), Ramp({ 1, 16, 1 }), Ramp({ 2, 11, 10 }), Ramp({ 20, 6, 6 }), Ramp({ 12, 6, 4 }), Ramp({ 0, 8, 4 }), Ramp({ 0, 15, 18 }), Ramp({ 2, 13, 2 }), Ramp({ 3, 13, 14 }), Ramp({ 3, 8, 2 }), Ramp({ 3, 15, 14 }), Ramp({ 13, 15, 18 }), Ramp({ 2, 16, 14 }), Ramp({ 1, 16, 14 }), Ramp({ 1, 16, 10 }), Ramp({ 1, 11, 18 }), Ramp({ 1, 11, 4 }), Ramp({ 20, 0, 4 }), Ramp({ 12, 6, 7 }), Ramp({ 9, 7, 7 }), Ramp({ 9, 11, 8 }), Ramp({ 9, 8, 4 }), Ramp({ 0, 15, 10 }), Ramp({ 3, 8, 14 }), Ramp({ 3, 15, 2 }), Ramp({ 13, 15, 14 }), Ramp({ 2, 15, 14 }), Ramp({ 1, 16, 18 }), Ramp({ 1, 11, 5 }), Ramp({ 0, 0, 5 }), Ramp({ 12, 7, 4 }), Ramp({ 9, 11, 10 }), Ramp({ 0, 15, 2 }), Ramp({ 1, 15, 15 }), Ramp({ 3, 8, 10 }), Ramp({ 3, 13, 10 }), Ramp({ 5, 13, 10 }), Ramp({ 5, 8, 18 }), Ramp({ 5, 8, 14 }), Ramp({ 5, 15, 14 }), Ramp({ 2, 16, 18 }), Ramp({ 1, 16, 8 }), Ramp({ 0, 11, 8 }), Ramp({ 0, 11, 4 }), Ramp({ 9, 7, 8 }), Ramp({ 0, 7, 13 }), Ramp({ 0, 4, 18 }), Ramp({ 0, 4, 2 }), Ramp({ 1, 4, 18 }), Ramp({ 2, 15, 2 }), Ramp({ 5, 13, 2 }), Ramp({ 5, 13, 15 }), Ramp({ 5, 15, 10 }), Ramp({ 5, 16, 10 }), Ramp({ 13, 16, 10 }), Ramp({ 2, 16, 13 }), Ramp({ 1, 16, 5 }), Ramp({ 0, 11, 5 }), Ramp({ 0, 4, 4 }), Ramp({ 0, 4, 7 }), Ramp({ 0, 7, 7 }), Ramp({ 0, 7, 5 }), Ramp({ 1, 4, 14 }), Ramp({ 3, 13, 2 }), Ramp({ 5, 16, 14 }), Ramp({ 8, 16, 18 }), Ramp({ 8, 16, 4 }), Ramp({ 0, 6, 13 }), Ramp({ 0, 4, 13 }), Ramp({ 0, 4, 5 }), Ramp({ 1, 4, 2 }), Ramp({ 5, 15, 2 }), Ramp({ 3, 13, 18 }), Ramp({ 5, 15, 18 }), Ramp({ 8, 16, 8 }), Ramp({ 2, 16, 4 }), Ramp({ 1, 0, 4 }), Ramp({ 0, 4, 6 }), Ramp({ 5, 13, 14 }), Ramp({ 5, 8, 1 }), Ramp({ 5, 16, 0 }), Ramp({ 1, 0, 7 }), Ramp({ 0, 4, 0 }), Ramp({ 1, 8, 1 }), Ramp({ 5, 8, 0 }), Ramp({ 5, 15, 0 }), Ramp({ 8, 15, 0 }), Ramp({ 8, 16, 0 }), Ramp({ 0, 6, 0 }), Ramp({ 1, 8, 0 }), Ramp({ 2, 8, 0 }), Ramp({ 3, 15, 0 }), Ramp({ 3, 8, 0 }), Ramp({ 5, 13, 0 }), Ramp({ 0, 11, 0 }), Ramp({ 3, 13, 0 }), Ramp({ 1, 15, 0 }), Ramp({ 13, 11, 0 }), Ramp({ 3, 16, 0 }), Ramp({ 13, 0, 0 }) };

void fragment() {
	vec4 c = textureLod(screen_texture, SCREEN_UV, 0.0);
	int light_level = int(round(c.r * float(LIGHT_LEVELS-1)));
	int ramp = int(round(c.g * 255.0));
	
	if (c.a > 0.95) {
		COLOR = COLORS[RAMPS[ramp].arr[light_level]];
	}
	else {
		COLOR = vec4(0.0);
	}
}